Log of steps taken throughout project

21/11/2023
Cloned repo from gitlab using SSH
Removed .venv folder using rmdir .venv /s /q
Created virtual conda environment for project (conda create --name c1_coursework_wp289)
Activated environment (conda activate c1_coursework_wp289)
Exported environment to YAML file (conda env export > environment.yml)
Initialised git (git init in /wp289)
Added env YAML & log file
Pushed to gitlab ("Env & log files created")
Created README
Added MIT license (https://choosealicense.com/) as .txt file and in README
Installed pre-commit (pre-commit hooks)
Installed pytest (testing)
Installed black (formatting)
Installed flake8 (check for PEP8 compliance)

chmod u+x /.git/hooks/pre_commit (not needed with pre-commit)

Added .gitignore to ignore jupyter sandbox file

Set-up pre-commit yaml (from lecture notes)
Note: pre-commit doesn't work with pytest
pre-commit install 

Getting error:
An unexpected error has occurred: CalledProcessError: command: ('C:/Program Files/Git/mingw64/libexec/git-core\\git.EXE', 'fetch', 'origin', '--tags')
return code: 128
stdout: (none)
stderr:
    git@github.com: Permission denied (publickey).
    fatal: Could not read from remote repository.

    Please make sure you have the correct access rights
    and the repository exists.
Check the log at C:\Users\William Purvis\.cache\pre-commit\pre-commit.log

Although git SSH key is added succesfully
Commit errors dissapear when pre-commit is uninstalled
Error dissapears when --no-verify is used (suggesting issue with pre-commit setup rather than SSH)

Todo: documentation (sphinx), check with James re: pre-commit

22/11/23
Bug fixing pre-commit
YAML file contents:

repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
    -   id: check-yaml
    -   id: end-of-file-fixer
    -   id: trailing-whitespace
-   repo: https://github.com/psf/black
    rev: 23.10.0
    hooks:
    -   id: black

Downloaded sphinx for documentation
Run: to generate documentation
sphinx-apidoc -o docs .

Help: https://redandgreen.co.uk/sphinx/python-code/
Todo: fix documentation, write unit tests

make clean html (to clean HTML)
make html (to make HTML docs)

Fixed documentation! Pushed to gitlab
Updated environment & pushed that to gitlab

25/11/23
Fixed pre-commit
Started work on new branch (backtracking_dev)
Created utils.py folder for utility functions
Added tests for utility functions

Ignored some error codes for flake8:
    E501: line length
    E721: isinstance()
    W503: clashes with Black formatting